I"7<h2 id="安装gitnodejs-hexo">安装：Git、node.js、 hexo</h2>

<ol>
  <li>
    <p>安装Homebrew</p>
  </li>
  <li>
    <p>安装node.js</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install node
</code></pre></div>    </div>
  </li>
  <li>
    <p>安装git</p>

    <p>一种方法是安装Xcode, 另一种方法是</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install git
</code></pre></div>    </div>
  </li>
  <li>
    <p>使用 npm 安装 hexo</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install -g hexo-cli
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="初始化博客">初始化博客</h2>

<ol>
  <li>
    <p>在某位置新建blogs文件夹，如<code class="language-plaintext highlighter-rouge">～/Documents/blogs</code>，并<code class="language-plaintext highlighter-rouge">cd</code>入该文件夹</p>
  </li>
  <li>
    <p>博客初始化，这一步会在<code class="language-plaintext highlighter-rouge">blogs</code>中生成一些配置文件</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hexo init
</code></pre></div>    </div>
  </li>
  <li>
    <p>进行本地预览</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hexo s
</code></pre></div>    </div>
  </li>
  <li>
    <p>在<code class="language-plaintext highlighter-rouge">http://localhost:4000</code>进行预览，看到HEXO的<code class="language-plaintext highlighter-rouge">hello world</code>界面即为成功</p>
  </li>
</ol>

<h2 id="添加ssh-key到github">添加SSH Key到github</h2>

<p><code class="language-plaintext highlighter-rouge">Enter file in which to save the key</code>时直接按回车，即在默认位置生成ssh文件，即<code class="language-plaintext highlighter-rouge">/Users/xxx/.ssh/id_rsa.pub</code></p>

<p><code class="language-plaintext highlighter-rouge">Enter passphrase</code>时直接回车即不需要密码，如设置密码，该密码为push时需要的密码，与github账户密码等无关</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>% git config --global user.name "github账户名，大小写敏感"                   
% git config --global user.email "github账户邮箱"
% ssh-keygen -t rsa -C "github账户邮箱"
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/xxx/.ssh/id_rsa): 
Created directory '/Users/lihan/.ssh'.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /Users/xxx/.ssh/id_rsa.
Your public key has been saved in /Users/xxx/.ssh/id_rsa.pub.

</code></pre></div></div>

<p>生成文件之后，复制<code class="language-plaintext highlighter-rouge">id_rsa.pub</code>中的内容，这就是需要的key；登陆github -&gt; setting -&gt; SSH and GPG keys -&gt; New SSH key，将key复制粘贴，Title可以取名为设备名</p>

<h2 id="本地博客关联到github主页">本地博客关联到Github主页</h2>

<ol>
  <li>
    <p>登录Github并且创建一个名字为 <code class="language-plaintext highlighter-rouge">username.github.io</code> 的仓库，如<code class="language-plaintext highlighter-rouge">HerloConnell.github.io</code>，选择<code class="language-plaintext highlighter-rouge">Public</code></p>
  </li>
  <li>
    <p>修改<code class="language-plaintext highlighter-rouge">blogs/_config.yml</code>的<code class="language-plaintext highlighter-rouge">deploy</code>，注意这里使用的是分支master</p>

    <p><strong>在8.13号以后git需要使用令牌，repo设置稍有改动，具体见错误2</strong></p>

    <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">deploy</span><span class="pi">:</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">git</span>
  <span class="na">repo</span><span class="pi">:</span> <span class="s">https://github.com/HerloConnell/HerloConnell.github.io.git</span>
  <span class="na">branch</span><span class="pi">:</span> <span class="s">master</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>将博客push到GitHub</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hexo g
hexo d
</code></pre></div>    </div>
  </li>
  <li>
    <p>在该仓库的<code class="language-plaintext highlighter-rouge">settings</code>中选择<code class="language-plaintext highlighter-rouge">GitHub Pages</code>,点击<code class="language-plaintext highlighter-rouge">heck it out here!</code>，显示</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Your site is published at https://herloconnell.github.io/
</code></pre></div>    </div>

    <p>在<code class="language-plaintext highlighter-rouge">Source</code>处选择<code class="language-plaintext highlighter-rouge">Branch:master</code></p>
  </li>
  <li>
    <p>再次执行下面的代码，此时应该可以在<code class="language-plaintext highlighter-rouge">https://herloconnell.github.io/</code>看到Hexo界面</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hexo g
hexo d
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="hexo常用命令">hexo常用命令</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hexo n "博客名称"  =&gt; hexo new "博客名称"   #这两个都是创建新文章，前者是简写模式
hexo p  =&gt; hexo publish
hexo g  =&gt; hexo generate  #生成
hexo s  =&gt; hexo server  #启动服务预览
hexo d  =&gt; hexo deploy  #部署  

hexo server   #Hexo 会监视文件变动并自动更新，无须重启服务器。
hexo server -s   #静态模式
hexo server -p 5000   #更改端口
hexo server -i 192.168.1.1   #自定义IP
hexo clean   #清除缓存，网页正常情况下可以忽略此条命令
hexo g   #生成静态网页
hexo d   #开始部署
</code></pre></div></div>

<h2 id="fluid主题">Fluid主题</h2>

<p><a href="https://hexo.io/themes/">hexo主题网站</a>，<a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a></p>

<ol>
  <li>
    <p>在<code class="language-plaintext highlighter-rouge">/blogs/themes</code>中</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/fluid-dev/hexo-theme-fluid.git
</code></pre></div>    </div>
  </li>
  <li>
    <p>将<code class="language-plaintext highlighter-rouge">hexo-theme-fluid</code>文件夹更名为<code class="language-plaintext highlighter-rouge">fluid</code>，并修改hexo的<code class="language-plaintext highlighter-rouge">_config.yml</code></p>

    <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">theme</span><span class="pi">:</span> <span class="s">fluid</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>参考<code class="language-plaintext highlighter-rouge">Fluid</code>主题配置进行配置，如配置<code class="language-plaintext highlighter-rouge">Latex</code>支持等（注：<code class="language-plaintext highlighter-rouge">Latex</code>需要在文章 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a>里指定 <code class="language-plaintext highlighter-rouge">math: true</code> 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度）</p>
  </li>
</ol>

<h2 id="twikoo-评论系统">Twikoo 评论系统</h2>

<p><a href="https://twikoo.js.org/quick-start.html#云函数部署">Twikoo官网 </a>，<a href="https://www.anzifan.com/post/icarus_to_candy_2/">参考于该篇博客</a></p>

<ol>
  <li>
    <p>在腾讯云申请云环境</p>

    <blockquote>
      <p><a href="https://curl.qcloud.com/KnnJtUom">注册云开发CloudBase</a></p>

      <p>进入云开发控制台，新建环境，请按需配置环境：环境名称自由填写，选择计费方式<code class="language-plaintext highlighter-rouge">包年包月</code>，套餐版本<code class="language-plaintext highlighter-rouge">免费版</code>，超出免费额度不会收费</p>

      <p>进入<a href="https://console.cloud.tencent.com/tcb/env/login">环境-登录授权</a>，启用“匿名登录”；</p>

      <p>进入<a href="https://console.cloud.tencent.com/tcb/env/safety">环境-安全配置</a>，将网站域名(如<code class="language-plaintext highlighter-rouge">herloconnell.github.io</code>)添加到“WEB安全域名”</p>
    </blockquote>
  </li>
  <li>
    <p>配置云函数</p>

    <blockquote>
      <p>进入<a href="https://console.cloud.tencent.com/tcb/scf/index">环境-云函数</a>，点击“新建云函数”</p>

      <p>函数名称请填写：<code class="language-plaintext highlighter-rouge">twikoo</code>，创建方式请选择：<code class="language-plaintext highlighter-rouge">空白函数</code>，运行环境请选择：<code class="language-plaintext highlighter-rouge">Nodejs 10.15</code>，函数内存请选择：<code class="language-plaintext highlighter-rouge">128MB</code>，点击“下一步”</p>

      <p>打开 <a href="https://imaegoo.coding.net/public/twikoo/twikoo/git/files/dev/src/function/twikoo/index.js">index.js</a>，全选代码、复制、粘贴到“函数代码”输入框中，点击“确定”</p>

      <p>创建完成后，点击“twikoo”进入云函数详情页，进入“函数代码”标签，点击“文件 - 新建文件”，输入 <code class="language-plaintext highlighter-rouge">package.json</code>，回车</p>

      <p>打开 <a href="https://imaegoo.coding.net/public/twikoo/twikoo/git/files/dev/src/function/twikoo/package.json">package.json</a>，全选代码、复制、粘贴到代码框中，点击“保存并安装依赖”</p>
    </blockquote>
  </li>
  <li>
    <p>修改config.yml</p>

    <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">comments</span><span class="pi">:</span>
<span class="na">enable</span><span class="pi">:</span> <span class="no">true</span>
<span class="c1"># 指定的插件，需要同时设置对应插件的必要参数</span>
<span class="c1"># The specified plugin needs to set the necessary parameters at the same time</span>
<span class="c1"># Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis</span>
<span class="na">type</span><span class="pi">:</span> <span class="s">twikoo</span>
<span class="s">....</span>
<span class="na">twikoo</span><span class="pi">:</span>
  <span class="na">envId</span><span class="pi">:</span> <span class="c1">#云环境ID</span>
  <span class="na">region</span><span class="pi">:</span> <span class="c1"># ap-guangzhou 或 ap-shanghai，根据云环境申请地而定</span>
  <span class="na">path</span><span class="pi">:</span> <span class="c1"># window.location.pathname</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>配置、管理你的 Twikoo 评论系统</p>

    <p>到这一步<code class="language-plaintext highlighter-rouge">hexo clean</code>，<code class="language-plaintext highlighter-rouge">hexo g</code>，<code class="language-plaintext highlighter-rouge">hexo d</code>之后应该可以看到评论系统。</p>

    <blockquote>
      <p>进入<a href="https://console.cloud.tencent.com/tcb/env/login">环境-登录授权</a>，点击“自定义登录”右边的“私钥下载”，下载私钥文件</p>

      <p>用文本编辑器打开私钥文件，复制全部内容</p>

      <p>你只需要来到最下面的评论区，点击小齿轮 即可配置更多设置，当然博主是需要登录的，初次进入需要粘贴私钥文件内容，并设置管理员密码。</p>
    </blockquote>
  </li>
</ol>

<h2 id="错误">错误</h2>

<p><strong>错误一：443</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fatal unable to access https://github.com LibreSSL SSL_connect SSL_ERROR_SYSCALL <span class="k">in </span>connection to github.com 443
</code></pre></div></div>

<p>科学上网的换个节点或者多提交几次即可</p>

<p><strong>错误二：403</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>remote: Support <span class="k">for </span>password authentication was removed on August 13, 2021. Please use a personal access token instead.
remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ <span class="k">for </span>more information.
fatal: unable to access <span class="s1">'https://github.com/HerloConnell/HerloConnell.github.io.git/'</span>: The requested URL returned error: 403
</code></pre></div></div>

<p>2021年8月13后 GitHub 不能再用密码pull/push 需要使用令牌。</p>

<ul>
  <li>
    <p>进入 Github –&gt; Settings –&gt; Developer settings –&gt; Personal access tokens获得一个token，这里作用域我点的全选。</p>
  </li>
  <li>
    <p>修改<code class="language-plaintext highlighter-rouge">config</code></p>

    <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">deploy</span><span class="pi">:</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">git</span>
  <span class="na">repo</span><span class="pi">:</span> <span class="s">https://&lt;Token&gt;@github.com/HerloConnell/HerloConnell.github.io.git</span>
  <span class="na">branch</span><span class="pi">:</span> <span class="s">master</span>
</code></pre></div>    </div>
  </li>
</ul>

:ET